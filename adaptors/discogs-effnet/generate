#!/usr/bin/env python3
import os
import glob
from essentia.standard import MonoLoader, TensorflowPredictEffnetDiscogs
import json
import numpy as np
from scipy.spatial.distance import euclidean
import sys

script_path = os.path.abspath(__file__)
script_dir = os.path.dirname(script_path)

# Function to compute the average embedding for a given audio file
def compute_average_embedding(filename):
    audio = MonoLoader(filename=filename, sampleRate=16000, resampleQuality=4)()
    model = TensorflowPredictEffnetDiscogs(graphFilename=script_dir + "/discogs_track_embeddings-effnet-bs64-1.pb", output="PartitionedCall:1")
    embeddings = model(audio)
    average_embedding = np.mean(embeddings, axis=0)
    return average_embedding


embed = compute_average_embedding(sys.argv[1])
 
print(json.dumps(embed.tolist()))
